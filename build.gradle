/*
 * Copyright 2018 Keval Patel.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    apply from: './config.gradle'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.16"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.11.0"
    }
}
apply from: './config.gradle'

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'org.jetbrains.dokka-android'
    dokka dokkaConfig

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        kotlinOptions kotlinOption
    }
}

subprojects {
    afterEvaluate { project ->
        apply from: "${project.rootDir}/config.gradle"

        if (project.hasProperty("android")) {   //All the android projects

            //Apply all the configs for the android block here.
            android {
                compileSdkVersion versions.compileSdk
                buildToolsVersion versions.buildTools

                if (project.pluginManager.hasPlugin("com.android.application")) {
                    //This is the app module
                    defaultConfig defaultAppConfig
                } else if (project.pluginManager.hasPlugin("com.android.library")) {
                    //This is the library module
                    defaultConfig libDefaultConfig
                }

                //General options
                compileOptions compileOption
                packagingOptions packageExcludes
                lintOptions lintOption
                aaptOptions aaptOption
                testOptions testOption
                adbOptions adbOption
            }

            sourceSets {
                main.java.srcDirs += 'src/main/kotlin'
                test.java.srcDirs += 'src/test/kotlin'
                test.java.srcDirs += 'src/androidTest/kotlin'
            }

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
                implementation 'androidx.core:core-ktx:0.3'
                implementation 'com.jakewharton.timber:timber:4.7.0'

                implementation "io.reactivex.rxjava2:rxjava:2.1.12"
                implementation "io.reactivex.rxjava2:rxandroid:2.0.2"

                //Support libs
                implementation "com.android.support:support-annotations:${versions.supportLibrary}"
                implementation "com.android.support:support-v4:${versions.supportLibrary}"
                implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
                implementation "com.android.support:design:${versions.supportLibrary}"
                implementation 'com.android.support.constraint:constraint-layout:1.1.0'

                //Arch
                implementation "android.arch.lifecycle:common-java8:${versions.archComponent}"
                implementation "android.arch.lifecycle:extensions:${versions.archComponent}"

                // Test dependency
                if (project.name != "testutils") {
                    //Dagger dependencies
                    implementation "com.google.dagger:dagger-android:${versions.daggerVersion}"
                    implementation "com.google.dagger:dagger-android-support:${versions.daggerVersion}"
                    kapt "com.google.dagger:dagger-android-processor:${versions.daggerVersion}"
                    kapt "com.google.dagger:dagger-compiler:${versions.daggerVersion}"
                    compileOnly "javax.annotation:jsr250-api:1.0"

                    testImplementation 'junit:junit:4.12'
                    testImplementation "com.android.support.test:rules:1.0.2-alpha1"
                    testImplementation "com.android.support.test:monitor:1.0.2-alpha1"
                    testImplementation 'com.android.support.test:runner:1.0.2-alpha1'
                    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okHttp}"
                    testImplementation "org.mockito:mockito-core:2.15.0"
                    testImplementation "org.robolectric:robolectric:3.8"

                    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${versions.okHttp}"
                    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
                    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${versions.espresso}"
                    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${versions.espresso}"
                    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${versions.espresso}"
                    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:2.1.3"
                }
            }
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
